{% extends 'content.twig' %}


{% block form %}
    <form method="POST" novalidate {{ form_enctype(form) }} autocomplete="off">
        <div class="box text">
            {{ form_label(form.title) }}
            {{ form_widget(form.title) }}
            {{ form_errors(form.title) }}
        </div>
        <div class="box text">
            {{ form_label(form.code) }}
            {{ form_widget(form.code) }}
            {{ form_errors(form.code) }}
        </div>
        <div class="box text">
            {{ form_label(form.from) }}
            {{ form_widget(form.from) }}
            {{ form_errors(form.from) }}
        </div>
        <div class="box textarea">
            {{ form_label(form.recipients) }}
            {{ form_widget(form.recipients) }}
            {{ form_errors(form.recipients) }}
        </div>
        <div class="box textarea">
            {{ form_label(form.fields) }}
            {{ form_widget(form.fields,{attr:{style:'display:none;'}}) }}

            <select id="{{ form.fields.vars.id }}_add" type="button" style="width: 16em;">
                <option value=""></option>
                {% for key, val in app.get.configData('FORM_WIDGETS') %}
                    <option value="{{ key }}">{{ val }}</option>
                {% endfor %}
            </select>
            <table id="{{ form.fields.vars.id }}_formbuilder" class="table table-striped table-bordered table-hover" style="margin-top: .2em">
                <thead>
                <tr>
                    <th width="20%">Widget</th>
                    <th width="30%">Label</th>
                    <th width="30%">ID</th>
                    <th width="10%">Required</th>
                    <th width="10%"></th>
                </tr>
                </thead>
            </table>
            <div>&nbsp;</div>
            {{ form_errors(form.fields) }}
        </div>

        {{ form_rest(form) }}

        <div style="clear: both;"></div>
        <div>&nbsp;</div>
        <div class="submit-container">
            <a class="btn btn-white" href="{{ returnUrl }}"><i class="fa fa-arrow-left"></i> &nbsp;Back</a>
            <input class="btn btn-sm btn-primary pull-right m-t-n-xs" type="submit" value="Save" name="submit" />
            <input class="btn btn-sm btn-success pull-right m-t-n-xs" type="submit" value="Apply" name="submit" />
        </div>
    </form>
{% endblock %}

{% block extraFooter %}
    {{ parent() }}
    <script id="formbuilder-source" type="text/x-handlebars-template">{% include 'handlebars/pages/content-form_descriptor/formbuilder.twig' %}</script>
    <script>
        var _formbuilder = $("#formbuilder-source").html();

        $(function() {
            $(document).on('change', '#{{ form.fields.vars.id }}_formbuilder .wgt', function(ev) {
                if ($(this).val() == 'choice') {
                    $('#sql' + $(this).attr('data-idx')).show();
                } else {
                    $('#sql' + $(this).attr('data-idx')).hide();
                }
            });

            $(document).on('keyup, change', '#{{ form.fields.vars.id }}_formbuilder .form-control', function(ev) {
                assemble();
            });

            $(document).on('click', '#{{ form.fields.vars.id }}_formbuilder .js-delete', function(ev) {
                json = JSON.parse($('#{{ form.fields.vars.id }}').val());
                json.splice($(this).attr('data-idx'), 1);
                $('#{{ form.fields.vars.id }}').val(JSON.stringify(json));

                $(this).closest('tbody').remove();
                return false;
            });

            $(document).on('change', '#{{ form.fields.vars.id }}_add', function(ev) {
                var itm = {
                    widget: $(this).val(),
                    label: 'New Field',
                    id: 'newFeild',
                    required: 0,
                    sql: '',
                };
                try {
                    json = JSON.parse($('#{{ form.fields.vars.id }}').val());
                } catch (ex) {
                    json = [];
                }
                json.push(itm);
                $('#{{ form.fields.vars.id }}').val(JSON.stringify(json));

                repaint_add(itm, json.length - 1);

                $('#{{ form.fields.vars.id }}_formbuilder').sortable({
                    items: 'tbody',
                    stop: function(event, ui) {
                        assemble();
                    },
                    placeholder: {
                        element: function(currentItem) {
                            return $('<tr><td colspan="5" style="height: ' + $(currentItem).height() + 'px">&nbsp;</td></tr>')[0];
                        },
                        update: function(container, p) {
                            return;
                        }
                    }
                });
            });

            repaint();
            $('#{{ form.fields.vars.id }}_formbuilder').sortable({
                items: 'tbody',
                stop: function(event, ui) {
                    assemble();
                },
                placeholder: {
                    element: function(currentItem) {
                        return $('<tr><td colspan="5" style="height: ' + $(currentItem).height() + 'px">&nbsp;</td></tr>')[0];
                    },
                    update: function(container, p) {
                        return;
                    }
                }
            });
        });

        function repaint() {
            $('#{{ form.fields.vars.id }}_formbuilder').find('tbody').remove();
            var json = JSON.parse($('#{{ form.fields.vars.id }}').val());
            for (var idx in json) {
                var itm = json[idx];
                repaint_add(itm, idx);
            }
        };

        function repaint_add(itm, idx) {
            var template = Handlebars.compile(_formbuilder);
            $('#{{ form.fields.vars.id }}_formbuilder').append(template({
                widgets: {{ app.get.configData('FORM_WIDGETS')|json_encode|raw }},
                itm: itm,
                idx: idx,
            }));
            $.each($('#{{ form.fields.vars.id }}_formbuilder td'), function (key, value) {
                $(value).css('width', $(value).outerWidth() + 'px');
            });
            $('#{{ form.fields.vars.id }}_add').val('');
            $('#{{ form.fields.vars.id }}_add').trigger("chosen:updated");
            $('#{{ form.fields.vars.id }}_formbuilder .wgt').chosen({
                allow_single_deselect: true
            });
        };

        function assemble() {
            var json = [];
            $.each($('#{{ form.fields.vars.id }}_formbuilder tbody'), function(key, value) {
                json.push({
                    widget: $(value).find('.wgt').val(),
                    label: $(value).find('.lbl').val(),
                    id: $(value).find('.id').val(),
                    required: $(value).find('.req').is(':checked') ? 1 : 0,
                    sql: $(value).find('.sql').val(),
                });
            });
            $('#{{ form.fields.vars.id }}').val(JSON.stringify(json));
        };
    </script>
{% endblock %}
