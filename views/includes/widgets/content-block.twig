{% block content_block_label -%}
{%- endblock content_block_label -%}

{% block content_block_widget -%}
    <div id="{{ id }}_wrap">
        <div id="{{ id }}_container"></div>
        <button id="{{ id }}-add-section" type="button" class="btn"><i class="fa fa-plus"></i> section</button>
        <textarea {{ block('widget_attributes') }} style="display: none;">{{ value ?: '[]' }}</textarea>
        <hr/>
        <div id="{{ id }}-modal-section" class="modal fade" aria-hidden="true" role="dialog" tabindex="-1"></div>
        <div id="{{ id }}-modal-block" class="modal fade" aria-hidden="true" role="dialog" tabindex="-1"></div>
    </div>

    <script id="{{ id }}_section" type="text/x-handlebars-template">{% include 'handlebars/widgets/content-block/section.twig' %}</script>
    <script id="{{ id }}_block" type="text/x-handlebars-template">{% include 'handlebars/widgets/content-block/block.twig' %}</script>
    <script id="{{ id }}_sidebar" type="text/x-handlebars-template">{% include 'handlebars/widgets/content-block/sidebar.twig' %}</script>
    <script id="{{ id }}_modal_section" type="text/x-handlebars-template">{% include 'handlebars/widgets/content-block/modal-section.twig' %}</script>
    <script id="{{ id }}_modal_block" type="text/x-handlebars-template">{% include 'handlebars/widgets/content-block/modal-block.twig' %}</script>

    <script>
        var _{{ id }}_template_section = Handlebars.compile($("#{{ id }}_section").html());
        var _{{ id }}_template_block = Handlebars.compile($("#{{ id }}_block").html());
        var _{{ id }}_template_modal_section = Handlebars.compile($("#{{ id }}_modal_section").html());
        var _{{ id }}_template_modal_block = Handlebars.compile($("#{{ id }}_modal_block").html());
        var _{{ id }}_template_sidebar = Handlebars.compile($("#{{ id }}_sidebar").html());

        var _{{ id }}_blockOptions = {{ app.blocks.blockDropdownOptions|json_encode|raw }};
        var _{{ id }}_value = {{ app.blocks.decodedDataValue(value)|json_encode|raw }};
        var _{{ id }}_tags = {{ app.blocks.relationshipTags|json_encode|raw }};

        $(function () {
            $('.js-blocks-{{ id }}').sortable({
                connectWith: ".js-blocks-{{ id }}",
                handle: ".panel-heading",
            }).disableSelection();

            $('#{{ id }}-modal-section').on('shown.bs.modal', function () {
                $('#{{ id }}-modal-section select.js-after-chosen').chosen({
                    allow_single_deselect: true
                });
            });

            $(document).on('click', '#{{ id }}_wrap .js-section .js-down', function () {
                var id = $(this).closest('.js-section').data('id');
                for (var idx in _{{ id }}_value) {
                    var itm = _{{ id }}_value[idx];
                    if (itm.id == id && idx < (_{{ id }}_value.length - 1)) {
                        idx = parseInt(idx, 10);
                        _{{ id }}_value[idx] = JSON.parse(JSON.stringify(_{{ id }}_value[idx + 1]));
                        _{{ id }}_value[idx + 1] = JSON.parse(JSON.stringify(itm));
                        break;
                    }
                }
                render{{ id }}();
                assemble{{ id }}();
                return false;
            });
            $(document).on('click', '#{{ id }}_wrap .js-section .js-up', function () {
                var id = $(this).closest('.js-section').data('id');
                for (var idx in _{{ id }}_value) {
                    var itm = _{{ id }}_value[idx];
                    if (itm.id == id && idx > 0) {
                        idx = parseInt(idx, 10);
                        _{{ id }}_value[idx] = JSON.parse(JSON.stringify(_{{ id }}_value[idx - 1]));
                        _{{ id }}_value[idx - 1] = JSON.parse(JSON.stringify(itm));
                        break;
                    }
                }
                render{{ id }}();
                assemble{{ id }}();
                return false;
            });

            $(document).on('click', '#{{ id }}-add-section', function () {
                $("#{{ id }}-modal-section").html(_{{ id }}_template_modal_section({
                    section: {
                        id: Math.random().toString(36).substr(2, 9),
                        title: 'Content',
                        attr: 'content',
                        status: 1,
                        tags: [],
                        blocks: [],
                    },
                    optionTags: _{{ id }}_tags,
                }));
                $("#{{ id }}-modal-section").modal();
            });
            $(document).on('click', '#{{ id }}_wrap .js-edit-section', function () {
                var id = $(this).closest('.js-section').data('id');
                var section = getById{{ id }}(_{{ id }}_value, id);
                $("#{{ id }}-modal-section").html(_{{ id }}_template_modal_section({
                    section: section,
                    optionTags: _{{ id }}_tags,
                }));
                $("#{{ id }}-modal-section").modal();
                return false;
            });
            $(document).on('click', '#{{ id }}_wrap .js-save-section', function () {
                var section = {
                    id: $('#{{ id }}-modal-section [name=id]').val(),
                    title: $('#{{ id }}-modal-section [name=name]').val(),
                    attr: $('#{{ id }}-modal-section [name=attr]').val(),
                    status: $('#{{ id }}-modal-section [name=status]').val(),
                    tags: typeof $('#{{ id }}-modal-section [name=tags]').val() == 'object' ? $('#{{ id }}-modal-section [name=tags]').val() : [],
                    blocks: [],
                };
                var existSection = getById{{ id }}(_{{ id }}_value, section.id)
                if (!existSection) {
                    _{{ id }}_value.push(section);
                } else {
                    existSection.title = section.title;
                    existSection.attr = section.attr;
                    existSection.tags = section.tags;
                }
                $('#{{ id }}').val(cleanString{{ id }}(_{{ id }}_value));
                $('#{{ id }}-modal-section').modal('hide');
                render{{ id }}();
            });
            $(document).on('click', '#{{ id }}_container .js-delete-section', function () {
                var secId = $(this).closest('.js-section').data('id');

                for (var idx in _{{ id }}_value) {
                    var itm = _{{ id }}_value[idx];
                    if (itm.id == secId) {
                        _{{ id }}_value.splice(idx, 1)
                    }
                }
                render{{ id }}();
                assemble{{ id }}();
                return false;
            });
            $(document).on('click', '#{{ id }}_container .js-status-toggle', function () {
                var type = $(this).data('type');
                if (type == 'section') {
                    var obj = getById{{ id }}(_{{ id }}_value, $(this).closest('.js-section').data('id'));
                } else {
                    var blocks = [];
                    for (var idx in _{{ id }}_value) {
                        var itm = _{{ id }}_value[idx];
                        blocks = blocks.concat(itm.blocks);
                    }
                    var obj = getById{{ id }}(blocks, $(this).closest('.js-block').data('id'));
                }

                obj.status = $(this).data('status');
                render{{ id }}();
                assemble{{ id }}();
                return false;
            });

            $(document).on('change', '.js-section-{{ id }} .js-add-block', function () {
                var blockOption = getById{{ id }}(_{{ id }}_blockOptions, $(this).val());
                var block = {
                    id: Math.random().toString(36).substr(2, 9),
                    title: blockOption.title,
                    block: blockOption.id,
                    status: 1,
                };
                var section = getById{{ id }}(_{{ id }}_value, $(this).closest('.js-section').data('id'));
                $("#{{ id }}-modal-block").html(_{{ id }}_template_modal_block({
                    block: block,
                    section: section,
                }));
                $("#{{ id }}-modal-block").modal();
                $(this).val('');
            });
            $(document).on('click', '#{{ id }}_wrap .js-edit-block', function () {
                var blocks = [];
                for (var idx in _{{ id }}_value) {
                    var itm = _{{ id }}_value[idx];
                    blocks = blocks.concat(itm.blocks);
                }
                var block = getById{{ id }}(blocks, $(this).closest('.js-block').data('id'));
                var section = getById{{ id }}(_{{ id }}_value, $(this).closest('.js-section').data('id'));
                $("#{{ id }}-modal-block").html(_{{ id }}_template_modal_block({
                    block: block,
                    section: section,
                }));
                $("#{{ id }}-modal-block").modal();
                $(this).val('');
            });
            $(document).on('click', '#{{ id }}_wrap .js-save-block', function () {
                var blockOption = getById{{ id }}(_{{ id }}_blockOptions, $('#{{ id }}-modal-block [name=blockId]').val());

                var block = {
                    id: $('#{{ id }}-modal-block [name=id]').val(),
                    title: $('#{{ id }}-modal-block [name=name]').val(),
                    status: $('#{{ id }}-modal-block [name=status]').val(),
                    block: $('#{{ id }}-modal-block [name=blockId]').val(),
                    items: blockOption.items,
                    values: {},
                };

                var section = getById{{ id }}(_{{ id }}_value, $('#{{ id }}-modal-block [name=sectionId]').val());

                var blocks = [];
                for (var idx in _{{ id }}_value) {
                    var itm = _{{ id }}_value[idx];
                    blocks = blocks.concat(itm.blocks);
                }
                var existBlock = getById{{ id }}(blocks, $('#{{ id }}-modal-block [name=id]').val());
                if (!existBlock) {
                    section.blocks.push(block);
                } else {
                    existBlock.title = block.title
                }
                $('#{{ id }}').val(cleanString{{ id }}(_{{ id }}_value));
                $('#{{ id }}-modal-block').modal('hide');
                render{{ id }}();
            });
            $(document).on('click', '#{{ id }}_container .js-delete-block', function () {
                var secId = $(this).closest('.js-section').data('id');
                var blkId = $(this).closest('.js-block').data('id');

                var section = getById{{ id }}(_{{ id }}_value, secId);
                for (var idx in section.blocks) {
                    var itm = section.blocks[idx];
                    if (itm.id == blkId) {
                        section.blocks.splice(idx, 1)
                    }
                }
                render{{ id }}();
                assemble{{ id }}();
                return false;
            });

            render{{ id }}();
        });

        function render{{ id }}() {
            render_content{{ id }}();
            render_sidebar{{ id }}()
        };

        function render_content{{ id }}() {
            $("#{{ id }}_container").empty();

            for (var idx in _{{ id }}_value) {
                var itm = _{{ id }}_value[idx];
                $("#{{ id }}_container").append(_{{ id }}_template_section({
                    id: '{{ id }}',
                    blockOptions: _{{ id }}_blockOptions,
                    section: itm,
                    idx: idx,
                    total: _{{ id }}_value.length - 1,
                }));

                for (var idxBlk in itm.blocks) {
                    var block = itm.blocks[idxBlk];
                    $('.js-section-{{ id }}-' + itm.id + ' .js-blocks').append(_{{ id }}_template_block({
                        id: '{{ id }}',
                        block: block,
                        idx: idxBlk,
                    }));
                }

                if (!itm.blocks.length) {
                    $('.js-section-{{ id }}-' + itm.id + ' .js-blocks .js-no-blocks').fadeIn();
                }
            }

            $('#{{ id }}_container').sortable({
                handle: '.panel-heading',
                items: '.panel-default',
                stop: function (event, ui) {
                    assemble{{ id }}();
                    render{{ id }}();
                },
                placeholder: {
                    element: function (currentItem) {
                        return $('<div class="panel panel-default js-block" colspan="3" style="background: lightyellow; height: ' + $(currentItem).height() + 'px">&nbsp;</div>')[0];
                    },
                    update: function (container, p) {
                        return;
                    }
                }
            });

            $('#{{ id }}_container select.js-after-chosen').chosen({
                allow_single_deselect: true
            });

            $('#{{ id }}_container .js-date').datetimepicker({
                timepicker: false,
                format: 'Y-m-d',
                scrollInput: false,
            });

            $('#{{ id }}_container .js-datetime').datetimepicker({
                timepicker: true,
                format: 'Y-m-d H:i',
                scrollInput: false,
                step: 5,
            });

            $('#{{ id }}_container .js-time').datetimepicker({
                timepicker: true,
                datepicker: false,
                format: 'H:i',
                scrollInput: false,
                step: 5,
            });

            $('#{{ id }}_container .js-redactor').redactor({
                plugins: ['filePicker', 'imagePicker', 'video', 'table'],
                minHeight: 300,
                changeCallback: function() {
                    assemble{{ id }}();
                },
            });


            $('#{{ id }}_container .js-asset-delete').click(function(ev) {
                $($(this).data('id')).val('');
                $($(this).data('id') + '-preview').css('visibility', 'hidden');
                assemble{{ id }}();
            });

            $('#{{ id }}_container .js-asset-change').click(function(ev) {
                var _this = this;
                window._callback = function () {
                    $($(_this).data('id')).val($(this).closest('.file-box').data('id'));
                    $($(_this).data('id') + '-preview').css('visibility', 'visible');
                    $($(_this).data('id') + '-preview').attr('src', '/asset/files/image/' + $(this).closest('.file-box').data('id') + '/cms_file_preview');
                    assemble{{ id }}();
                };
                filepicker();
            });

            $('.js-elem').change(function () {
                assemble{{ id }}();
            });
            {#$('.js-cbi-item').on('keyup', function () {
                assemble{{ id }}();
            });#}
        };

        function render_sidebar{{ id }}() {
            $('.sidebar{{ id }}').remove();
            $('body').append(_{{ id }}_template_sidebar({
                className: 'sidebar{{ id }}',
            }));
            $('.sidebar{{ id }} .panel-body').append('<div class="jstree"></div>');

            if ($(window).scrollTop() > 150) {
                $('.sidebar{{ id }}').css('top', 0);
            } else {
                $('.sidebar{{ id }}').css('top', '150px');
            }
            $(window).on('scroll resize', function () {
                if ($(window).scrollTop() > 150) {
                    $('.sidebar{{ id }}').css('top', 0);
                } else {
                    $('.sidebar{{ id }}').css('top', '150px');
                }
            });

            var data = [];
            for (var idxSec in _{{ id }}_value) {
                var section = _{{ id }}_value[idxSec];
                var obj = {
                    id: section.id,
                    text: section.title,
                    state: {
                        opened: true,
                        selected: false
                    },
                    children: [],
                    type: section.status == 1 ? 'section' : 'section-disabled',
                };
                for (var idxBlk in section.blocks) {
                    var block = section.blocks[idxBlk];
                    obj.children.push({
                        id: block.id,
                        text: block.title,
                        type: block.status == 1 ? 'block' : 'block-disabled',
                    })
                }
                data.push(obj);
            }

            $('.sidebar{{ id }} .jstree').jstree({
                core: {
                    check_callback: true,
                    data: data,
                },
                'plugins': ['types', 'dnd'],
                'types': {
                    "#" : {
                        "valid_children" : ["section"]
                    },
                    "section" : {
                        'icon': 'fa fa-folder-open-o',
                        "valid_children" : ["block"]
                    },
                    "section-disabled" : {
                        'icon': 'fa fa-folder-open-o text-danger',
                        "valid_children" : ["block"]
                    },
                    "block" : {
                        'icon': 'fa fa-file-text-o',
                        "valid_children" : [],
                    },
                    "block-disabled" : {
                        'icon': 'fa fa-file-text-o text-danger',
                        "valid_children" : [],
                    },
                },
            }).on('ready.jstree',
                function() {
                    setTimeout($.proxy(function () {
                        $('.scroll-content').slimscroll({
                            height: Math.min($(window).height() - 50, $('.sidebar{{ id }} .panel-body').outerHeight()) + 'px',
                        })
                    }, this), 100);
                }
            );

            $('.sidebar{{ id }} .jstree').bind("move_node.jstree", function (e, data) {
                var nodes = $(this).jstree().get_json($(this), {
                    flat: true
                });

                var blocks = [];
                for (var idx in _{{ id }}_value) {
                    var itm = _{{ id }}_value[idx];
                    blocks = blocks.concat(itm.blocks);
                }

                var result = [];
                for (var idx in nodes) {
                    var itm = nodes[idx];
                    if (itm.parent == '#') {
                        var section = getById{{ id }}(_{{ id }}_value, itm.id);
                        section.blocks = [];
                        for (var idxBlk in nodes) {
                            var blk = nodes[idxBlk];
                            if (blk.parent == itm.id) {
                                section.blocks.push(getById{{ id }}(blocks, blk.id));
                            }
                        }
                        result.push(section);
                    }
                }

                _{{ id }}_value = result;
                render_content{{ id }}();
                assemble{{ id }}();

            });
            $('.sidebar{{ id }} .jstree').on("select_node.jstree", function (e, data) {
                if (data.node.parent == '#') {
                    var selector = '.js-section-{{ id }}-' + data.node.id;
                } else {
                    var selector = '.js-block-' + data.node.id;
                }
                $("html, body").animate({ scrollTop: $(selector).position().top });
            });

            $('.sidebar{{ id }}').find('.sidebar-submit .js-back').click(function () {
                location.href = $('form').find('.js-back').attr('href');
                return false;
            });

            $('.sidebar{{ id }}').find('.sidebar-submit [value=Apply]').click(function () {
                $('form').find('[value=Apply]').click();
            });

            $('.sidebar{{ id }}').find('.sidebar-submit [value=Save]').click(function () {
                $('form').find('[value=Save]').click();
            });

        };

        function assemble{{ id }}() {
            var blocks = [];
            for (var idx in _{{ id }}_value) {
                var itm = _{{ id }}_value[idx];
                blocks = blocks.concat(itm.blocks);
            }

            $.each($('#{{ id }}_container .js-section'), function (idx, itm) {
                var section = getById{{ id }}(_{{ id }}_value, $(itm).data('id'));
                section.blocks = [];
                $.each($(itm).find('.js-block'), function (idxBlk, itmBlk) {
                    var block = getById{{ id }}(blocks, $(itmBlk).data('id'));
                    if (block) {
                        $.each($(itmBlk).find('.js-elem'), function (idxElem, itmElem) {
                            if ($(itmElem).attr('type') == 'checkbox') {
                                block.values[$(itmElem).attr('id')] = $(itmElem).is(':checked') ? 1 : 0;
                            } else {
                                block.values[$(itmElem).attr('id')] = $(itmElem).val();
                            }
                        });
                        section.blocks.push(block)
                    }
                });
            });
            $('#{{ id }}').val(cleanString{{ id }}(_{{ id }}_value));
        };

        function getById{{ id }}(data, id) {
            for (var idx in data) {
                var itm = data[idx];
                if (itm.id == id) {
                    return itm;
                }
            }
            return null;
        };

        function cleanString{{ id }}(sections) {
            sections = JSON.parse(JSON.stringify(sections));
            for (var idxSection in sections) {
                var section = sections[idxSection];
                for (var idxBlock in section.blocks) {
                    var block = section.blocks[idxBlock];
                    delete block.items;
                }
            }
            return JSON.stringify(sections)
        };
    </script>
{%- endblock content_block_widget -%}