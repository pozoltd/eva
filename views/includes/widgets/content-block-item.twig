{% block content_block_item_widget -%}
    <table id="{{ id }}_container" class="table table-bordered table-striped">
        <thead>
        <tr>
            <th>Widget</th>
            <th>ID</th>
            <th>Title</th>
        </tr>
        </thead>
    </table>
    <button id="{{ id }}_add" type="button" class="btn"><i class="fa fa-plus"></i></button>
    <textarea {{ block('widget_attributes') }} style="display: none;">{{ value ?: '[]' }}</textarea>

    <script id="{{ id }}_row" type="text/x-handlebars-template">{% include 'handlebars/widgets/content-block-item/content-block-item.twig' %}</script>
    <script>
        var _{{ id }}_template = Handlebars.compile($("#{{ id }}_row").html());;
        $(function () {
            $('#{{ id }}_add').click(function () {
                try {
                    var data = JSON.parse($('#{{ id }}').val());
                } catch (ex) {
                    var data = [];
                }
                data.push({
                    widget: 0,
                    id: 'id',
                    title: 'Titie:',
                    sql: '',
                });
                $('#{{ id }}').val(JSON.stringify(data));
                render{{ id }}();
            });
            render{{ id }}();
        });

        function render{{ id }}() {
            $("#{{ id }}_container tbody").remove();
            var data = JSON.parse($('#{{ id }}').val());
            for (var idx in data) {
                var itm = data[idx];
                $("#{{ id }}_container").append(_{{ id }}_template({
                    widgets: {{ app.get.configData('CONTNET_BLOCK_WIDGETS')|json_encode|raw }},
                    data: itm,
                }));
            }
            $('#{{ id }}_container').sortable({
                items: 'tbody',
                stop: function(event, ui) {
                    assemble{{ id }}();
                },
                placeholder: {
                    element: function(currentItem) {
                        return $('<tr><td colspan="3" style="background: lightyellow; height: ' + $(currentItem).height() + 'px">&nbsp;</td></tr>')[0];
                    },
                    update: function(container, p) {
                        return;
                    }
                }
            });
            $('.js-cbi-widget').on('change', function () {
                assemble{{ id }}();
                render{{ id }}();
            });
            $('.js-cbi-item').on('keyup', function () {
                assemble{{ id }}();
            });
            $.each($('#{{ id }}_container td'), function (key, value) {
                $(value).css('width', $(value).outerWidth() + 'px');
            });
        };

        function assemble{{ id }}() {
            var data = [];
            $.each($('#{{ id }}_container tbody.js-row'), function (idx, itm) {
                data.push({
                    widget: $(itm).find('.js-cbi-widget').val(),
                    id: $(itm).find('.js-cbi-id').val(),
                    title: $(itm).find('.js-cbi-title').val(),
                    sql: $(itm).find('.js-cbi-sql').val(),
                });
            });
            $('#{{ id }}').val(JSON.stringify(data));
        };
    </script>
{%- endblock content_block_item_widget -%}