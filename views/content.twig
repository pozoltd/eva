{% extends 'layout.twig' %}
{% block extraBodyClass %}page-content{% endblock %}

{% block extraHead %}
	<link rel="stylesheet" type="text/css" href="{{ constant('CDN') }}/redactor/redactor/redactor.css" />
	<link href="{{ constant('CDN') }}/inspinia/css/plugins/jsTree/style.min.css" rel="stylesheet">
{% endblock %}

{% block extraHeaderLeft %}
	<h2>Manage <label class="label label-warning-light">{{ model.title }}</label></h2>
{% endblock %}

{% block content %}
	<div class="row">
		<div class="col-lg-12 max-1000">
			<div class="ibox float-e-margins">
				<div class="ibox-title">
					<h2>{{ content.id ? '#' ~ content.id  : 'Creating new record...' }}</h2>
				</div>
				<div class="ibox-content">
					{% block form %}
						<form method="POST" novalidate {{ form_enctype(form) }} autocomplete="off">
							{{ form_widget(form) }}
							<div style="clear: both;"></div>
							<div>&nbsp;</div>
							<div class="submit-container">
								<a class="js-back btn btn-white" href="{{ returnUrl }}"><i class="fa fa-arrow-left"></i> &nbsp;Back</a>
								<input class="btn btn-sm btn-primary pull-right m-t-n-xs" type="submit" value="Save" name="submit" />
								<input class="btn btn-sm btn-success pull-right m-t-n-xs" type="submit" value="Apply" name="submit" />
								{#<input class="btn btn-sm btn-danger pull-right m-t-n-xs" type="submit" value="Delete" name="submit" />#}
							</div>
						</form>
					{% endblock %}
				</div>
			</div>
		</div>
	</div>

	<div id="popup-container">
		<div class="row" style="margin: 0">
			<div class="col-lg-12" style="padding: 0">
				<div class="ibox">
					<div class="ibox-title">
						<div class="js-upload"></div>
					</div>
				</div>
			</div>
		</div>
		<div class="row" style="margin: 0">
			<div class="col-lg-2" id="js-folders"></div>
			<div class="col-lg-10" id="js-files"></div>
		</div>
	</div>
{% endblock %}


{% block extraFooter %}
	<script id="file" type="text/x-handlebars-template">{% include 'handlebars/pages/file/file.twig' %}</script>
	<script id="loading" type="text/x-handlebars-template">{% include 'handlebars/pages/file/loading.twig' %}</script>
	<script id="template-upload" type="text/x-handlebars-template">
        {% verbatim %}
			<button class="btn btn-sm btn-info" onclick="$('#fileupload').click();">
				<i class="fa fa-upload"></i> Upload
			</button>
			<input id="fileupload" type="file" name="files[]" multiple style="display: none;">
			<div class="progress progress-striped" style="display: none;">
				<div class="progress-bar progress-bar-warning" role="progressbar" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" style="width: 0%"></div>
			</div>
		{% endverbatim %}
	</script>

	<script src="{{ constant('CDN') }}/redactor/redactor/redactor.min.js"></script>
	<script src="{{ constant('CDN') }}/redactor/plugins/table.js"></script>
	<script src="{{ constant('CDN') }}/redactor/plugins/video.js"></script>
	<script src="{{ constant('CDN') }}/inspinia/js/plugins/jsTree/jstree.min.js"></script>
	<script src="{{ constant('CDN') }}/inspinia/js/plugins/slimscroll/jquery.slimscroll.min.js"></script>

	<script src="https://cdnjs.cloudflare.com/ajax/libs/blueimp-file-upload/9.5.7/jquery.iframe-transport.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/blueimp-file-upload/9.5.7/jquery.fileupload.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.imagesloaded/3.0.4/jquery.imagesloaded.min.js"></script>
	<script>

        $.Redactor.prototype.filePicker = function() {
            return {
                init: function()
                {
                    var button = this.button.add('file', 'File Picker');
                    this.button.addCallback(button, this.filePicker.show);
                },
                show: function()
                {
                    window._redactor = this;
                    window._callback = function() {
                        window._redactor.file.insert.call(window._redactor, '<a href="/asset/files/download/' + $(this).closest('.file-box').data('id') + '/">' + $(this).closest('.file-box').data('title') + '</a>');
                    };
                    filepicker();
                }
            };
        };

        $.Redactor.prototype.imagePicker = function() {
            return {
                init: function()
                {
                    var button = this.button.add('image', 'Image Picker');
                    this.button.addCallback(button, this.imagePicker.show);
                },
                show: function()
                {
                    window._redactor = this;
                    window._callback = function() {
                        window._redactor.image.insert.call(window._redactor, '<img src="/asset/files/image/' + $(this).closest('.file-box').data('id') + '/general" alt="' + $(this).closest('.file-box').data('title') + '">');
                    };
                    filepicker();
                }
            };
        };

		var _parentId = -1;

		$(function() {
			{% if app.request.get('cat') and not content.id %}
				if ($('#form_category_select').length > 0 && $('#form_category').length > 0) {
					$('#form_category_select').val('{{ app.request.get('cat') }}');
					$('#form_category').val(JSON.stringify(['{{ app.request.get('cat') }}']));
				}
			{% endif %}

			$(document).on('click', '.assetpicker .js-asset-change', function(ev) {
				var _this = this;
				window._callback = function () {
					$($(_this).data('id')).val($(this).closest('.file-box').data('id'));
					$($(_this).data('id') + '-preview').css('visibility', 'visible');
					$($(_this).data('id') + '-preview').attr('src', '/asset/files/image/' + $(this).closest('.file-box').data('id') + '/cms_file_preview');
				};
				filepicker();
			});

			$(document).on('click', '.assetpicker .js-asset-delete', function(ev) {
				$($(this).data('id')).val('');
				$($(this).data('id') + '-preview').css('visibility', 'hidden');
			});

			$(document).on('click', '.assetfolderpicker .change', function(ev) {
				var _this = this;
				window._callback = function () {
					$($(_this).attr('data-id')).val($(this).closest('tr.folder-row').attr('data-id'));
					$($(_this).attr('data-id') + '-title').html($(this).closest('tr.folder-row').find('.folder').html());
				};
				folderpicker();
			});

			$(document).on('click', '.assetfolderpicker .delete', function(ev) {
				$($(this).attr('data-id')).val('');
				$($(this).attr('data-id') + '-title').html('Choose...');
			});

            $(document).on('click', '#js-files .file-box a', function() {
                window._callback.call(this);
                $.fancybox.close();
                return false;
            });


			$('.wysiwyg textarea').redactor({
				plugins: ['filePicker', 'imagePicker', 'video', 'table'],
				minHeight: 300,
			});

			$('select:not(.no-chosen)').chosen({
				allow_single_deselect: true
			});
		});

		function folderpicker() {
			$('.asset-picker-upload').css('visibility', 'hidden');
			$('#popup-container .title').html('Choose a folder');
			$('#popup-container .content').hide();
			$('#popup-container .load').show();
			$.fancybox.open([
				{
					href : '#popup-container',
					type : 'inline',
					minWidth: 400,
					minHeight: 600,
					maxWidth: 400,
					maxHeight: 600,
					helpers: {
						overlay: {
							locked: false
						}
					}
				},
			], {
				padding : 0
			});

			folders(-1);
		}

		function folders(parentId) {

			$.ajax({
				url: '/pz/asset/json/' + parentId + '/',
				dataType: 'json',
				beforeSend: function() {
					$('#popup-container .content').fadeOut(400, function() {
						$('#popup-container .load').fadeIn();
					});
				},
			}).done(function(json) {
				_folders = json[0];
				_files = [];
				_ancestors = json[2];
				_parentId = json[3];
				repaintAssetFolderPicker();

			});
		};

		function repaintAssetFolderPicker() {
			$('#popup-container .content .modal-body').empty();

			var folderPickerTableTemplate = Handlebars.compile(_folderPickerTableSource);
			$('#popup-container .content .modal-body').append(folderPickerTableTemplate());

			var folderPickerTableRowTemplate = Handlebars.compile(_folderPickerTableRowSource);
			for (var idx in _folders) {
				var itm = _folders[idx];
				$('#folderpicker-table-body').append(folderPickerTableRowTemplate({
					itm: itm,
				}));
			}


			$('#popup-container .load').fadeOut(400, function() {
				$('#popup-container .content').fadeIn();
			});

			$('#popup-container #folderpicker-table-body .folder').off();
			$('#popup-container #folderpicker-table-body .folder').click(function() {
				folders($(this).closest('tr.folder-row').attr('data-id'));
				return false;
			});

			$('#popup-container #folderpicker-table-body .select').off();
			$('#popup-container #folderpicker-table-body .select').click(function() {
				window._callback.call(this);
				$.fancybox.close();
				return false;
			});

			$('#popup-container .content .breadcrumb').empty();
			$('#popup-container .content .breadcrumb').append(_ancestors.length == 0 ? '<li class="active"><strong>Home</strong></li>' : '<li><a href="#" data-id="0">Home</a></li>');
			for (var idx in _ancestors) {
				var itm = _ancestors[idx];
				$('#popup-container .content .breadcrumb').append(idx == _ancestors.length - 1 ? '<li class="active"><strong>' + itm.title + '</strong></li>' : '<li><a href="#" data-id="' + itm.id + '">' + itm.title + '</a></li>');
			}

			$('#popup-container .content .breadcrumb a').click(function() {
				folders($(this).attr('data-id'));
				return false;
			});
		}

		function filepicker() {
			$.fancybox.open([
				{
					href : '#popup-container',
					type : 'inline',
					minWidth: 850,
					minHeight: 600,
                    maxWidth: 850,
                    maxHeight: 600,
				},
			], {
				padding : 0
			});
            var template = Handlebars.compile($("#loading").html())
            $('#js-folders').html('<div class="jstree">' + template() + '</div>');
            $.ajax({
                type: 'POST',
                url: '/pz/secured/files/folders',
                data: 'currentFolderId=' + _parentId,
                success: function (data) {
                    $('#js-folders .jstree').jstree({
                        core: {
                            data: [data],
                        },
                        plugins: ['types'],
                        types: {
                            default: {
                                'icon': 'fa fa-folder'
                            },
                        }
                    });
                    getFiles();
                }
            });
            $('#js-folders .jstree').on("select_node.jstree", function (e, data) {
                _parentId = data.node.id;
                getFiles();
            });

			getFiles();
		}

		function getFiles() {
            var template = Handlebars.compile($("#template-upload").html());
			$('#popup-container .js-upload').html(template());
            $('#fileupload').fileupload({
                url: '/pz/secured/files/upload',
                dataType: 'json',
                sequentialUploads: true,
                formData: {
                    __parentId: _parentId,
                },
                add: function (e, data) {
                    var uploadErrors = [];
                    if (data.files[0]['size'] == '' || data.files[0]['size'] > 50000000) {
                        uploadErrors.push('File size is too big');
                    }
                    if (uploadErrors.length > 0) {
                        alert(uploadErrors.join("\n"));
                    } else {
                        $('.progress').show();
                        data.submit();
                    }
                },
                start: function () {
                    $('.progress-bar').css('width', 0);
                },
                done: function (e, data) {
                    getFiles();
                },
                progressall: function (e, data) {
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    $('.progress-bar').css('width', progress + '%');
                },
                stop: function (e) {
                    $('.progress').fadeOut(3000);
                }
            }).prop('disabled', !$.support.fileInput).parent().addClass($.support.fileInput ? undefined : 'disabled');

            var template = Handlebars.compile($("#loading").html())
            $('#js-files').html('<div>' + template() + '</div>');
            $.ajax({
                type: 'POST',
                url: '/pz/secured/files/files',
                data: 'currentFolderId=' + _parentId + '&keyword=',
                success: function (data) {
                    $('#js-files').html('<div></div>');
                    for (var idx in data.files) {
                        var itm = data.files[idx];
                        var template = Handlebars.compile($("#file").html())
                        $('#js-files > div').append(template(itm))
                        $('#js-files > div').find('.file-box .js-file-delete').remove();

                    }
                }
            });
		};
	</script>
{% endblock %}