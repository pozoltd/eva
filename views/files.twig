{% extends 'layout.twig' %}

{% set folderId = app.request.get('folder') ?: -1 %}

{% block extraHead %}
    <link href="{{ constant('CDN') }}/inspinia/css/plugins/jsTree/style.min.css" rel="stylesheet">
    <style>
        .file-box {
            background: #f3f3f4;
            border: 1px solid #f3f3f4;
            margin: .5em;
        }
        .file {
            margin: 0;
        }
    </style>
{% endblock %}



{% block extraHeaderLeft %}
    <h2>File Manager</h2>

{% endblock %}


{% block content %}
    <div class="wrapper wrapper-content">
        <div class="row">
            <div class="col-lg-3">
                <div class="ibox float-e-margins">
                    <div class="ibox-content">
                        <div class="file-manager">
                            <div class="input-group">
                                <input type="text" class="form-control" style="padding: 0 .5em !important;height: 34px;">
                                <span class="input-group-btn">
                                    <button type="button" class="btn btn-default">Go</button>
                                </span>
                            </div>

                            <div class="hr-line-dashed"></div>
                            <input id="fileupload" type="file" name="files[]" multiple style="display: none;">
                            <div class="progress progress-striped" style="display: none; width: 350px;">
                                <div class="progress-bar progress-bar-warning" role="progressbar" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" style="width: 0%"></div>
                            </div>
                            <button class="btn btn-primary btn-block" onclick="$('#fileupload').click();">Upload Files</button>
                            <div class="hr-line-dashed"></div>
                            <h5 id="js-folder--1"><a class="jstree-anchor" href="#">Home</a></h5>
                            <div id="jstree1">
                                <ul id="js-folders">
                                </ul>
                            </div>
                            <div class="clearfix"></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-9 animated fadeInRight">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="ibox">
                            <div class="ibox-title">
                                <div style="float: left">
                                    <ol class="breadcrumb" style="display: inline-block">
                                        <li>
                                            <a href="index.html">Home</a>
                                        </li>
                                        <li>
                                            Css
                                        </li>
                                        <li class="active">
                                            <strong>fdas</strong>
                                        </li>
                                    </ol>
                                </div>

                                <div class="ibox-tools">
                                    {% if folderId %}
                                        <button class="btn btn-xs btn-circle btn-warning" data-toggle="modal" data-target="#js-edit-dialog">
                                            <i class="fa fa-pencil"></i>
                                        </button>
                                    {% endif %}

                                    <button class="btn btn-xs btn-circle btn-primary" data-toggle="modal" data-target="#js-add-dialog">
                                        <i class="fa fa-plus"></i>
                                    </button>

                                    {% if folderId %}
                                        <button class="btn btn-xs btn-circle btn-danger">
                                            <i class="fa fa-times"></i>
                                        </button>
                                    {% endif %}
                                </div>

                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-12" id="nestable2"></div>
                </div>
            </div>
        </div>
    </div>

    <div id="js-add-dialog" class="modal inmodal fade in" aria-hidden="true" role="dialog" tabindex="-1" >
        <div class="modal-dialog modal-sm">
            <div class="modal-content animated flipInY">
                <form method="POST" autocomplete="off" novalidate>
                    <div class="modal-body">
                        <div class="form-group">
                            <label>Folder name:</label>
                            <input type="text" name="name" placeholder="Enter a new name" class="form-control js-add-name">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-sm pull-right m-t-n-xs" data-dismiss="modal"><strong>Close</strong></button>
                        <button type="submit" class="btn btn-sm btn-primary pull-right m-t-n-xs js-add"><strong>Add</strong></button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div id="js-edit-dialog" class="modal inmodal fade in" aria-hidden="true" role="dialog" tabindex="-1" >
        <div class="modal-dialog modal-sm">
            <div class="modal-content animated flipInY">
                <form method="POST" autocomplete="off" novalidate>
                    <div class="modal-body">
                        <div class="form-group">
                            <label>Folder name:</label>
                            <input type="text" name="name" placeholder="" class="form-control js-edit-name">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-sm pull-right m-t-n-xs" data-dismiss="modal"><strong>Close</strong></button>
                        <button type="submit" class="btn btn-sm btn-primary pull-right m-t-n-xs js-edit"><strong>Update</strong></button>
                    </div>
                </form>
            </div>
        </div>
    </div>
{% endblock %}


{% block extraFooter %}
    <script src="//cdnjs.cloudflare.com/ajax/libs/blueimp-file-upload/9.5.7/jquery.iframe-transport.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/blueimp-file-upload/9.5.7/jquery.fileupload.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery.imagesloaded/3.0.4/jquery.imagesloaded.min.js"></script>
    <script src="{{ constant('CDN') }}/inspinia/js/plugins/jsTree/jstree.min.js"></script>
    <script src="{{ constant('CDN') }}/inspinia/js/plugins/validate/jquery.validate.min.js"></script>

    <script id="file-list-item" type="text/x-handlebars-template">{% include 'handlebars/file-list-item.twig' %}</script>
    <script id="folder-item" type="text/x-handlebars-template">{% include 'handlebars/folder-item.twig' %}</script>
    <script>
        var _fileListItem = $("#file-list-item").html();
        var _fileListItemTemplate = Handlebars.compile(_fileListItem);
        var _folderItem = $("#folder-item").html();
        var _folderItemTemplate = Handlebars.compile(_folderItem);

        var _files = [];
        var _folders = {};
        var _folder = '{{ folderId }}';

        $(function () {
            $('#fileupload').fileupload({
                url: '{{ path('upload-assets') }}',
                dataType: 'json',
                sequentialUploads: true,
                formData: {
                    parentId: _folder,
                },
                add: function(e, data) {
                    var uploadErrors = [];
                    if(data.files[0]['size'] == '' || data.files[0]['size'] > 50000000) {
                        uploadErrors.push('File size is too big');
                    }
                    if(uploadErrors.length > 0) {
                        alert(uploadErrors.join("\n"));
                    } else {
                        $('.progress').show();
                        data.submit();
                    }
                },
                start: function () {
                    $('.progress-bar').css('width', 0);
                },
                done: function (e, data) {
//                    _files.push(data.result);
//                    repaint();
                },
                progressall: function (e, data) {
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    $('.progress-bar').css('width', progress + '%');
                },
                stop: function (e) {
                    $('.progress').fadeOut(3000);
                }
            }).prop('disabled', !$.support.fileInput).parent().addClass($.support.fileInput ? undefined : 'disabled');

            $("#js-add-dialog form").validate({
                rules: {
                    name: "required",
                },
            });
            $(document).on('click', '.js-add', function () {
                if ($("#js-add-dialog form").valid()) {
                    $.ajax({
                        type: 'POST',
                        url: '{{ path('manage-folder') }}',
                        data: {
                            title: $('.js-add-name').val(),
                            __parentId: _folder,
                        },
                        success: function (data) {
                            $('#js-add-dialog').modal('toggle');
                        }
                    });
                }
                return false;
            });

            $(document).on('click', '.jstree-anchor', function () {
                _folder = $(this).parent().attr('id').replace('js-folder-', '');
                history.pushState(null, null, '/pz/files/?folder=' + _folder);
                getFiles();
                if (_folder == -1) {
                    $(this).parent().addClass('bg-info p-xs b-r-sm');
                    $(this).parent().css('width', '100px')
                    $('.jstree-anchor').removeClass('jstree-clicked');
                } else {
                    $(this).parent().removeClass('btn btn-xs btn-info');
                    $('.jstree-anchor').parent().removeClass('bg-info');
                    $('.jstree-anchor').parent().removeClass('p-xs');
                    $('.jstree-anchor').parent().removeClass('b-r-sm');
                }
                return false;
            });



//            window._src = null;
//            $('body').mousedown(function(ev) {
//                window._src = $(ev.target).data('src');
//                if (!window._src) {
//                    window._src = $(ev.target).closest('.file-box').data('src');
//                }
//                console.log(window._src)
//            });
//            $('body').mouseup(function(ev) {
//                var tgt = $(ev.target).closest('li').data('tgt')
////            console.log(window._src, tgt)
////                if (window._src && tgt) {
////                    for (var idx in files) {
////                        var itm = files[idx];
////                        if (itm.id == window._src) {
////                            files.splice(idx, 1)
////                        }
////                    }
//////                console.log(files)
//////                    renderFiles();
////                }
//                window._src = null;
////            console.log()
//            });

            getFiles();
            getFolders();
        });

        //
        function getFolders() {
            $.ajax({
                type: 'POST',
                url: '{{ path('fetch-folders') }}',
                success: function (data) {
                    _folders = data;
                    renderFolders()
                }
            });
        };
        //
        function renderFolders() {
            $('#js-folders').empty();
            for (var idx in _folders.children) {
                var itm = _folders.children[idx];
                _renderFolders(itm, $('#js-folders'));
            }

            $('#jstree1').jstree({
                'core': {
                    'check_callback': true
                },
                'plugins': ['types', 'dnd'],
                'types': {
                    'default': {
                        'icon': 'fa fa-folder'
                    },

                }
            });

            $('#jstree1').bind("move_node.jstree", function (e, data) {
                var nodes = $('#jstree1').jstree().get_json($('#jstree1'), {
                    flat: true
                });
                var data = [];
                for (var idx in nodes) {
                    var itm = nodes[idx];
                    data.push({
                        id: itm.id.replace('js-folder-', ''),
                        __parentId: itm.parent == '#' ? -1 : itm.parent.replace('js-folder-', ''),
                        __rank: idx,
                    });
                }
                $.ajax({
                    type: 'GET',
                    url: '{{ path('update-folders') }}',
                    data: 'data=' + encodeURIComponent(JSON.stringify(data)),
                    success: function (data) {
                    }
                });
            });

            $('#js-folder-' + _folder + ' > a').addClass('jstree-clicked');
        };
        //
        function _renderFolders(node, elem) {
            elem.append(_folderItemTemplate({
                folder: node,
                hasChildren: node.children.length ? 1 : 0
            }))
            for (var idx in node.children) {
                var itm = node.children[idx];
                _renderFolders(itm, $('#js-children-' + node.id));
            }
        };
        //
        function getFiles() {
            $.ajax({
                type: 'POST',
                url: '{{ path('fetch-files') }}',
                data: 'folder=' + _folder,
                success: function (data) {
                    _files = data;
                    renderFiles();
                }
            });
        };
        //
        function renderFiles() {
            $('#nestable2').empty();
            for (var idx in _files) {
                var itm = _files[idx];
                $('#nestable2').append(_fileListItemTemplate(itm))
            }
            $('#nestable2').sortable({
                cursorAt: {left: -30, top: -30}
            });
        };
    </script>


{% endblock %}

